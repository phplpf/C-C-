回忆昨天内容：
一  文件映射
1 将一块物理地址映射到进程的虚拟地址空间
2 将一个文件映射到进程的虚拟地址空间，对虚拟地址空间的内容进行修改，也就同步到了文件。
mmap(2)  munmap(2)
    匿名映射   因为映射的内存没有对应的文件名
    页  4k
close(2)文件描述符的时候，不会映像映射区域。
文件映射的时候，文件的打开方式和映射的权限一致。
二  获取文件的元数据
什么是文件的元数据？
文件的数据和元数据存放在哪里？
inode   硬链接文件  软链接文件
每个文件都有一个唯一的inode号对应。
文件的时间   秒数   字符串
用户  用户组
文件的权限

权限  也输出了  数字---->相应的字符串

今天的内容：
一获取文件的元数据（续）
将类型和权限组合的数字转换为字符串
0170000
0100664
0040775
0100664
0000400

0000700
0000600
0000400
0000110
0000100

二文件夹的操作
drwxrwxr-x 2 tarena tarena  4096 Jul  2 10:05 day07
r 读  w   写

读什么呀？写什么呀？
什么是文件夹的内容？
x  可执行  通过
程序中对文件夹的操作
opendir(3)   closedir(3)  readdir(3)

#include <sys/types.h>
#include <dirent.h>
DIR *opendir(const char *name);
功能：打开一个文件夹
参数：
name:指定了要打开的文件夹的名字
返回值：
错误  NULL  errno被设置
成功  返回一个指向文件夹流的地址

文件夹流的读写位置定位在文件夹的第一个条目

#include <sys/types.h>
#include <dirent.h>
int closedir(DIR *dirp);
功能：关闭一个文件夹
参数：
dirp:指定要关闭的文件夹流
返回值：
成功  0
错误  -1  errno被设置为合适的错误码


举例说明  打开一个文件夹，文件夹的名字通过argv[1]传递
代码参加  dir_os.c




三文件操作的杂项
四进程的基础知识
五 进程的创建



六 进程的终止
1  return和exit(3)的区别
return  是返回  函数的结束。并不代表进程的结束
exit(3) 整个进程就结束了
 
#include <stdlib.h>
void exit(int status);
功能：让进程正常终止
参数：
status:status  &  0377 的值返回给父进程
返回值：

exit(-1)   -1&0377
	整数是以补码的形式存放在内存中的。
        正整数的补码就是其原码。
        负数的补码就是这个数的绝对值的原码按位取反再加一。
1    00000000,00000000,00000000,00000001
-1   11111111,11111111,11111111,11111111
0377 00000000,00000000,00000000,11111111
     00000000,00000000,00000000,11111111

2 遗言函数
 这些函数，在进程终止的时候，执行。在进程没有终止的时候，需要向进程注册遗言函数。

 如何向进程注册遗言函数？
 atexit(3)  on_exit(3)
 #include <stdlib.h>
 int atexit(void (*function)(void));
 功能：向进程注册遗言函数
 参数：
function：将遗言函数的入口地址给到这个变量
 返回值：
　　成功　　0
　　错误　　非0　
	１　　注册顺序和调用顺序相反
　　　　　２　　同一个遗言函数可以被注册多次，注册一次就会被调用一次
　　　　　３　　子进程继承父进程的遗言函数
　　　　　４　　exec(3)家族函数的其中之一被调用的时候，进程注册的遗言函数全部被移除
   void (*function)(void)
举例说明  使用atexit(3)向进程注册遗言函数
代码参见 atexit.c 



