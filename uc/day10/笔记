回顾昨天内容：
一 环境变量
getenv(3) 
setenv(3)
unsetenv(3)
clearenv(3)
二 管道 
无名管道  有名管道
具有亲缘关系的进程间通讯。  pipe(2)
一种类型的文件   内容始终为0.只是起到进程间通讯的桥梁的作用。
mkfifo(3)
三  信号的基础
kill -l
四  向进程注册信号的处理函数
signal(2)
SIG_DFL   SIG_IGN  用户自定义的信号处理函数

五  信号的产生
kill(2)   raise(3) alarm(2) pause(2)


今天内容：
一  信号阻塞和未决信号
信号集类型   sigset_t
typedef int que_t[4];
que_t q;
跟类型相关的操作
#include <signal.h>
int sigemptyset(sigset_t *set);
功能：将set信号集初始化为空，将所有的信号从集合中排除
参数：
set:指定了要操作的信号集
返回值：
  成功  0
  错误  -1 errno被设置 

int sigfillset(sigset_t *set);
功能：将信号集初始化为满，包含所有的信号
参数：
set:指定了要操作的信号集
返回值：
  成功  0
  错误  -1 errno被设置 

int sigaddset(sigset_t *set, int signum);
功能：将信号添加到信号集中
参数：
set:指定具体的信号集
signum:指定具体的信号
返回值：
  成功  0
  错误  -1 errno被设置 

int sigdelset(sigset_t *set, int signum);
功能：将信号从信号集中移除
参数：
set:指定具体的信号集
signum:指定具体的信号
返回值：
  成功  0
  错误  -1 errno被设置     
int sigismember(const sigset_t *set, int signum);
功能：测试信号是不是信号集中的一员
参数：
set:指定具体的信号集
signum:指定具体的信号
返回值：
  成功  0   信号不是信号集的一员
       1    信号是信号集的一员
  错误  -1 errno被设置
1 定义一个信号集类型的变量set。
2 初始化信号集set为空
3 将2号信号添加到set中
4 将3号信号添加到set中
5 测试3号信号是不是信号集set中的一员
6 将3号信号从set中移除
7 测试3号信号是不是信号集set中的一员
 
如何将信号集设置为进程的信号掩码集？
sigprocmask(2)
#include <signal.h>
int sigprocmask(int how, const  sigset_t  *set,
       sigset_t *oldset);
功能：审查和改变进程的阻塞信号集
参数：
how：
SIG_BLOCK   进程当前信号掩码集和set集合的并集设置为当前进程的信号掩码集
SIG_UNBLOCK  将set集合中的信号从当前进程的阻塞信号集中移除
SIG_SETMASK  将set设置为当前进程的信号掩码集
set：用户定义的信号集
oset:如果不空，将进程原来的信号掩码集保存到这里
返回值：
成功    0
错误   -1  errno被设置

信号分为可靠信号和不可靠信号
阻塞期间发送多次，解除阻塞的时候，只处理依次，这样的信号，称为不可靠信号。1~31 
34~64 称为可靠信号   没有信号的丢失

未决信号集
有系统维护的。获取进程的未决信号集
sigpending(2）
#include <signal.h>
int sigpending(sigset_t *set);
功能：获取进程的未决信号集
参数：
set:指定具体的空间，将进程的未决信号集的值复制到这个地址空间里
返回值：
0   成功
失败  -1  errno被设置

二  网络的基础知识

服务器   是软件和硬件的结合   软件是服务   硬件是器
网络通讯中使用的是TCP/IP协议簇。
分为四层或者五层
OSI  七层参考模型
应用层  传输层   网络层  链路层  物理层
以太网   令牌环网

ip地址（逻辑地址）   mac地址（物理地址）
ip地址  127.0.0.1 环回地址 主要用于测试网络设备是否正常。

端口号   16bit   0~65535   1024以下不能用
IP地址 端口号  socket pair

IP 地址有两部分构成
网络号   主机号
子网掩码

192.168.1.130/24
255.255.255.0   子网掩码
192.168.1.0  网络号
130 0~255 

192.168.1.130/25
255.255.255.128
192.168.1.128
192.168.1.10000001

192.168.1.125/25
255.255.255.128
192.168.1.0
如何查看路由表?
sudo route 
sudo arp -a
ping 目标ip地址




