蒋贵良
标准C++(11days)、Qt、模板和stl
------------------------------
《C++ Primer》
《C++程序设计原理与实践》
------------------------------
一 C++语言概述//了解
1 历史背景
1）C++的江湖地位
   java、C、python、C++、C#
2）C++之父：Bjarne Stroustrup(1950--)
--》1979，Cpre，为C语言增加类的机制
--》1983，全新编程语言 C with Class，后来就是C++
--》1985，CFront1.0
         《The C++ Programming Language》
3）C++发展过程
--》1987，GNU C++
--》1990，Borland C++
--》1992，Microsoft C++(VC)
    ......
--》1998，ISO C++98
--》2003，ISO C++03
--》2011，ISO C++11
--》2014，ISO C++14
--》2017，ISO C++17
--》2020，ISO C++20
...

2 应用领域
1）游戏开发
2）科学计算
3）网络和分布式应用
4）操作系统和设备驱动
5）其它...

3 C和C++
1）都是编译型语言
2）都是强类型语言，但是C++更强
3）C++去除了C中不好的特性
4）C++增加了很多C中没有的好的语法特性，全面支持面向对象，比C语言更适合大型软件开发。

二 第一个C++程序
1 编译方式
1）gcc xx.cpp -lstdc++
2）g++ xx.cpp //推荐

2 文件扩展名
1）.cpp //推荐
2）.cxx
3）.cc
4）.C

3 头文件
#include <iostream>
--》C++中和I/O相关类型、对象、函数都在该头文件中
--》C++中绝大多数头文件没有.h后缀
--》C++开发中，可以直接使用C语言头文件，同时还提供了一套不带.h的替换版本
eg:
	#include <stdio.h> ==> #include <cstdio>
	#include <stdlib.h> ==> #include <cstdlib>
	#include <string.h> ==> #include <cstring>
	...

4 标准输入和输出
1）使用cin对象表示标准输入//类似scanf()
	int i;
	scanf("%d",&i);//C
	cin >> i;//C++
	------------------------------
	int i,doubld d;
	scanf("%d%lf",&i,&d);//C
	cin >> i >> d;//C++
	注：">>"输入操作符
	
2）使用cout对象表示标准输出//类似printf()
	int i = 123;
	printf("%d\n",i);//C
	cout << i << endl;//C++
	注："<<"输出操作符
	----------------------------
	int i = 123,double d = 4.56;
	printf("%d,%lf\n",i,d);//C
	cout << i << ',' << d << endl;//C++
    	  	
三 名字空间(命名空间)
1 功能
1）避免名字冲突
2）划分逻辑单元

2 定义名字空间
	namespace 空间名{
		名字空间成员1;
		名字空间成员2;
		...
	}
	注：名字空间成员可以是全局函数、全局变量、自定义类型、名字空间.

3 名字空间成员使用
1）通过作用域限定操作符"::"
	空间名::要访问成员;
   eg:
   "std::cout"表示使用标准名字空间里面cout  
2）名字空间指令
	using namespace 空间名;
	在该条指令以后的代码中，指定名字空间成员都可以见，可以直接访问，省略"空间名::"
3）名字空间声明
	using 空间名::名字空间成员;
	将名字空间中特定一个成员引入到声明所在的作用域中，在该作用域访问这个成员就如同是访问自己的成员一样，可以直接访问，省略"空间名::"
	
4 全局作用域和无名(匿名)名字空间 //了解
1）没有放在任何名字空间的成员，属于全局作用域，可以直接访问，如果和局部作用域的成员名字一样，局部优先；这时如果还希望访问到全局作用域的成员，可以通过“::成员”形式来显式指明.
2）定义名字空间时，可以没有名字，即为无名名子空间，对于无名空间里面的成员和全局作用域的成员一样，也可以直接访问，只是被局限在当前文件中.
5 名字空间嵌套//了解
eg:
  namespace ns1{
  		int num = 10;
  		namespace ns2{
  			int num = 20;
  			namespace ns3{
  				int num = 30;
  			}
  		}
  }
  cout << ns1::num << endl;//10
  cout << ns1::ns2::num << endl;//20
  cout << ns1::ns2::ns3::num << endl;//30
  
四 C++的结构体、联合体和枚举
1 结构体
1）当定义结构体变量时可以省略struct关键字
2）在结构体内部可以直接定义函数，称为成员函数(方法)，在成员函数中可以直接访问当前结构体中的其它成员。

2 联合体//了解
1）当定义联合体变量时可以省略union关键字
2）支持匿名联合
	
3 枚举
1）当定义枚举变量时，可以省略enum关键字
2）C++中枚举被看做是独立的数据类型，而C中枚举本质就是整型数
	enum STATE{SLEEP,RUN,STOP};
	STATE s;
	s = STOP;//C:ok,C++:ok
	s = 2;//C:ok,C++:error

五 字符串
1 回顾C中字符串
1）字面值常量 “hello”
2）字符指针 char* 
3）字符数组 char[]
eg：
	char* p1 = "abcdef";
	char* p2 = "123456";
	strcpy(p1,p2);//段错误
	-------------------------
	char arr1[] = "hello";
	char arr2[] = "wangjianli";
	strcpy(arr1,arr2);//内存越界，危险！
	--------------------------
	char arr[] = "hello";
	char* p = "world";
	p = arr;//ok
	arr = p;//error
	--------------------------

2 C++兼容C中字符串表示方式，同时增加了string类型转换表示字符串:
1）定义 
	string s;//定义空字符串
	string s = "xx";//定义同时初始化
	-----------------------------------
	//下面两种写法实际初始化过程和上面相同
	string s("xx");
	string s = string("xx");
2）字符串拷贝：=
   string s1 = "hello";
   string s2;
   s2 = s1;//拷贝
3）字符串连接：+ +=
	string s1 = "abc";
	string s2 = s1 + "def";
	cout << s2 << endl;//"abcdef"
4）字符串比较：== != > < >= <=
	if(s1 == s2){...}
5）随机访问：[]
	string s = "hello";
	s[0] = 'H';
6）成员函数
	size()/length();//获取字符串长度
	c_str();//获取C风格的字符串(const char*)

练习：使用string类型，从键盘读取一个字符串，统计里面包含字符“A”/“a”的个数.
提示：
		string str;
		cin >> str;//从键盘读取一个字符串
		

练习：使用string类型，从键盘读取一个字符串，将字符串反转，再打印输出
提示：
	输入：hello
	输出：olleh

www.cplusplus.com//C++官网网站，包括完整帮助手册