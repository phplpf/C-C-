回顾：
1 this指针
1）区分作用域
2）返回自引用，return *this;
3）对象自销毁，delete this;
4）作为成员函数实参，实现对象交互

2 常成员函数
1）const修饰的成员函数
2）不能在常函数不能修改成员变量，mutable
3）常对象只能调用常函数
4）函数名和形参表相同的成员函数，常版本和非常版本可以重载；

3 析构函数(Destructor)
  ~类名(void){清理对象的动态资源}

4 对象的创建和销毁
创建：分配内存->构造子对象->构造函数代码
销毁：析构函数代码->析构子对象->释放内存
--------------------------------
今天：
十七 拷贝构造和拷贝赋值
1 浅拷贝和深拷贝//参考copy1.png
1）如果类中包含了指针形式的成员变量，缺省的拷贝构造函数只是复制了指针变量本身，而没有复制指针所指向的数据，这种拷贝方式被称为浅拷贝
2）浅拷贝将会导致 不同对象的数据共享，同时可能会在析构时引发"double free"的异常，因此就必须自定义一个支持复制指针所指向数据的拷贝构造函数,即深拷贝.

2 拷贝赋值//参数copy2.png
1）当两个对象进行赋值操作时，比如“i2=i3”,编译器会自动将其翻译成i2.operator=(i3)成员函数调用形式，其中“operator=”被称为拷贝赋值操作符函数，由该函数实现两个对象的赋值运算，其返回结果就是表达式结果.
2）如果自己没有定义拷贝赋值函数，那么编译器会为该类提供一个缺省的拷贝赋值函数，但是缺省的拷贝赋值和拷贝构造类似，也是浅拷贝，有“double free”、数据共享、内存泄漏等问题，为了避免这些问题，需要自定义深拷贝赋值函数：
	类名& operator=(const 类名& that){
		if(&that != this){//防止自赋值
			//释放旧内存
			//分配新内存
			//拷贝新数据
		}
		return *this;//返回自引用
	}
	注：this指向左操作数，that对应右操作数

练习：实现String类，里面包含构造函数、析构函数、拷贝构造、拷贝赋值。

十八 静态成员(static)
1 静态成员变量
class 类名{
	static 数据类型 变量名;//声明
};
数据类型 类名::变量名 = 初值;//定义和初始化
1）普通成员变量属于对象，而静态成员变量不属于对象
2）普通成员变量在对象构造时定义和初始化，而静态成员变量需要在类的外部单独定义和初始化。
3）静态成员变量和全局变量类似，被存放在数据段，可以把静态成员变量理解为被限制在类中使用的共享资源.
4）使用
	类名::静态成员变量;//推荐
	对象.静态成员变量;//本质和上面等价

注：如果有const修饰的静态成员变量，可以在声明时初始化(特殊，了解)

2 静态成员函数
class 类名{
	static 返回类型 函数名(参数表){...}
};
1）静态成员函数没有this指针，也没有const属性
2）可以把静态成员函数理解为被限制在类中使用的全局函数
3）使用：
   类名::静态成员函数(实参表);//推荐
   对象.静态成员函数(实参表);//本质和上面等价
注：在静态成员函数中只能访问静态成员，而非静态成员函数中既可以访问静态成员也可以访问非静态的成员. 
   
3 单例模式
1）概念：
   一个类只允许存在唯一的对象，并提供它的访问方法
   
2）实现思路：
--》禁止在类的外部创建对象：私有化构造函数
--》类的内部维护唯一的对象：静态成员变量
--》提供单例对象的访问方法：静态成员函数

3）创建方式：
--》饿汉式：单例对象无论用或不用，程序启动即创建
--》懒汉式：单例对象用时再创建，不用即销毁

十九 成员指针//了解
1 成员变量指针
1）定义
	类型 类名::* 成员指针变量名 = &类名::成员变量;
2）使用
	对象.*成员指针变量名;
	对象指针->*成员指针变量名;

	注:".*"直接成员指针解引用操作符
	   "->*"间接成员指针解引用操作符

2 成员函数指针
1）定义
	返回类型 (类名::*成员函数指针)(参数表) 
		= &类名::成员函数名;
2）使用
	(对象.*成员函数指针)(实参表);
	(对象指针->*成员函数指针)(实参表);
	
	
练习：复习前面内容，重点看“十 引用”,“十五 this常成员函数”。

项目：企业员工管理系统V4.0
需求：优化企业员工类
	1）禁用拷贝构造和拷贝赋值
	2）创建对象时，从指定文件获取工号，保证工号唯一
	   id.txt-->m_id-->id.txt(+1)
	3）增加静态成员变量记录员工人数，人数信息保存到文件中。
	4）增加静态成员函数，获取员工人数信息